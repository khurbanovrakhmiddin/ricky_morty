import 'package:flutter/material.dart';import 'package:ricky_morty/features/domain/entities/person_entity.dart';import 'package:ricky_morty/features/presentation/widges/person_cached_network_image.dart';import '../../../common/app_colors.dart';class PersonDetailPage extends StatelessWidget {  final PersonEntity person;  const PersonDetailPage({Key? key, required this.person}) : super(key: key);  @override  Widget build(BuildContext context) {    return Scaffold(        appBar: AppBar(          title: Text("Character: ${person.name}"),        ),        body: Center(          child: SingleChildScrollView(child: Column(            children: [              const SizedBox(height: 24),              Text(                person.name,                style: TextStyle(fontSize: 28, color: Colors.white, fontWeight: FontWeight.w700),              ),              const SizedBox(height: 12),              PersonCachedImage(imageUrl: person.image, width: 260, height: 260),              const SizedBox(height: 16),              Row(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  CircleAvatar(                    maxRadius: 8,                    backgroundColor: person.status == 'Alive' ? Colors.green : Colors.red,                  ),                  const SizedBox(                    width: 8,                  ),                  Text(                    person.status,                    style: const TextStyle(color: Colors.white),                    maxLines: 1,                    overflow: TextOverflow.ellipsis,                  )                ],              ),              ...buildText("Gender",person.gender),              ...buildText("NumberOfEpisodes",person.episode.length.toString()),              ... buildText("Species",person.species),              ... buildText("Location",person.location.name),              ... buildText("PersonType",person.type??""),            ],          ),),        ));  }   buildText(String type,String value){    return   [      const SizedBox(height: 16),        Text(type,style:const TextStyle(color:  AppColors.greyColor),maxLines: 1,overflow: TextOverflow.ellipsis,),      const SizedBox(height: 4,),      Text(value,style:const TextStyle(color: Colors.white),maxLines: 1,overflow: TextOverflow.ellipsis,),    ];  }}