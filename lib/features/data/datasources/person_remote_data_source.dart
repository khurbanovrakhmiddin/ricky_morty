import 'dart:convert';import 'package:http/http.dart' as http;import 'package:ricky_morty/core/error/exeption.dart';import 'package:ricky_morty/features/data/models/person_model.dart';abstract class PersonRemoteDataSource {  Future<List<PersonModel>> getAllPersons(int page);  Future<List<PersonModel>> searchPerson(String query);}class PersonRemoteDataSourceImpl implements PersonRemoteDataSource {  final http.Client client;//https://rickandmortyapi.com/api/character/?page=$page'  //'https://rickandmortyapi.com/api/character/?name=$query'  PersonRemoteDataSourceImpl({required this.client});  @override  Future<List<PersonModel>> getAllPersons(int page) async {    return _getPersonFromUrl("https://rickandmortyapi.com/api/character/?page=$page");  }  @override  Future<List<PersonModel>> searchPerson(String query) async {    return _getPersonFromUrl("https://rickandmortyapi.com/api/character/?name=$query");  }  Future<List<PersonModel>> _getPersonFromUrl(String url) async {    print(url);    final response = await client.get(Uri.parse(url), headers: {'Content-Type': 'application/json'});    if (response.statusCode == 200) {      final person = json.decode(response.body);      return (person['result'] as List).map((e) => PersonModel.fromJson(e)).toList();    } else {      throw ServerExeption();    }  }}